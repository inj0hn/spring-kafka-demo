<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util.xsd">
                           
    <context:property-placeholder location="classpath:kafka-server.properties,classpath:producer.properties,classpath:consumer.properties"/>
    
    <bean id="kafkaMessageListenerContainer" class="org.springframework.kafka.listener.KafkaMessageListenerContainer" 
            init-method="start" destroy-method="stop" p:beanName="messageListenerContainer">
        <constructor-arg index="0">
            <bean class="org.springframework.kafka.core.DefaultKafkaConsumerFactory" c:configs-ref="consumerProps"/>
        </constructor-arg>
        <constructor-arg index="1" ref="containerProps"/>
    </bean>
    
    <bean id="kafkaTemplate" class="org.springframework.kafka.core.KafkaTemplate"
            p:defaultTopic="vagrant-kafka-poc">
        <constructor-arg index="0">
            <bean class="org.springframework.kafka.core.DefaultKafkaProducerFactory" c:configs-ref="producerProps"/>
        </constructor-arg>
    </bean>

    <bean id="containerProps" class="org.springframework.kafka.listener.config.ContainerProperties">
        <constructor-arg>
            <array>
                <value>vagrant-kafka-poc</value>
            </array>
        </constructor-arg>
        <property name="messageListener">
            <bean class="com.vagrant.TestMessageListener"/>
        </property>
    </bean>
    
    <util:map id="consumerProps">
        <entry>
            <key><util:constant static-field="org.apache.kafka.clients.consumer.ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG"/></key>
            <value>${kafka.server.endpoint}</value>
        </entry>
        <entry>
            <key><util:constant static-field="org.apache.kafka.clients.consumer.ConsumerConfig.GROUP_ID_CONFIG"/></key>
            <value>${group.id}</value>
        </entry>
        <entry>
            <key><util:constant static-field="org.apache.kafka.clients.consumer.ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG"/></key>
            <value>true</value>
        </entry>
        <entry>
            <key><util:constant static-field="org.apache.kafka.clients.consumer.ConsumerConfig.AUTO_COMMIT_INTERVAL_MS_CONFIG"/></key>
            <value>${autocommit.interval.milliseconds}</value>
        </entry>
        <entry>
            <key><util:constant static-field="org.apache.kafka.clients.consumer.ConsumerConfig.SESSION_TIMEOUT_MS_CONFIG"/></key>
            <value>${session.timeout.milliseconds}</value>
        </entry>
        <entry>
            <key><util:constant static-field="org.apache.kafka.clients.consumer.ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG"/></key>
            <value type="java.lang.Class">org.apache.kafka.common.serialization.StringDeserializer</value>
        </entry>
        <entry>
            <key><util:constant static-field="org.apache.kafka.clients.consumer.ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG"/></key>
            <value type="java.lang.Class">org.apache.kafka.common.serialization.StringDeserializer</value>
        </entry>
    </util:map>
    
    <util:map id="producerProps">
        <entry>
            <key><util:constant static-field="org.apache.kafka.clients.producer.ProducerConfig.BOOTSTRAP_SERVERS_CONFIG"/></key>
            <value>${kafka.server.endpoint}</value>
        </entry>
        <entry>
            <key><util:constant static-field="org.apache.kafka.clients.producer.ProducerConfig.RETRIES_CONFIG"/></key>
            <value>${send.retry.max}</value>
        </entry>
        <entry>
            <key><util:constant static-field="org.apache.kafka.clients.producer.ProducerConfig.BATCH_SIZE_CONFIG"/></key>
            <value>${batch.size}</value>
        </entry>
        <entry>
            <key><util:constant static-field="org.apache.kafka.clients.producer.ProducerConfig.LINGER_MS_CONFIG"/></key>
            <value>${linger.milliseconds}</value>
        </entry>
        <entry>
            <key><util:constant static-field="org.apache.kafka.clients.producer.ProducerConfig.BUFFER_MEMORY_CONFIG"/></key>
            <value>${buffer.memory}</value>
        </entry>
        <entry>
            <key><util:constant static-field="org.apache.kafka.clients.producer.ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG"/></key>
            <value type="java.lang.Class">org.apache.kafka.common.serialization.StringSerializer</value>
        </entry>
        <entry>
            <key><util:constant static-field="org.apache.kafka.clients.producer.ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG"/></key>
            <value type="java.lang.Class">org.apache.kafka.common.serialization.StringSerializer</value>
        </entry>
    </util:map>                                 
                           
</beans>                           